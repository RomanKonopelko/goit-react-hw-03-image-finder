{"version":3,"sources":["Servises/imageAjax.js","Components/Searchbar.jsx","Components/ImageGalleryItem.jsx","Components/Modal.jsx","Components/ImageGallery.jsx","Components/Button.jsx","App.js","index.js"],"names":["imageRequest","currentPage","searchQuery","perPage","ajax","get","then","response","data","hits","Searchbar","state","query","setQuery","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","autoComplete","placeholder","onChange","Component","ImageGalleryItem","src","alt","id","onClick","getModalImg","data-large","target","dataset","large","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","event","window","addEventListener","removeEventListener","createPortal","ImageGallery","showModal","toggleModal","images","map","webformatURL","tags","largeImageURL","Button","App","isLoading","getQuery","q","error","fetchImages","options","prevState","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","prevProp","color","height","width","timeout","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3c835477.chunk.js","sourcesContent":["import ajax from 'axios';\r\n\r\nconst API_KEY = '19834827-b752d1c95cba28ff11bc03641';\r\nconst BASE_URL = 'https://pixabay.com/api';\r\nconst imageRequest = ({ currentPage = 1, searchQuery = '', perPage = 12 }) => {\r\n  return ajax\r\n    .get(\r\n      `${BASE_URL}/?q=${searchQuery}&page=${currentPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=${perPage}`,\r\n    )\r\n    .then(response => response.data.hits);\r\n};\r\n\r\nexport default imageRequest;\r\n","import { Component } from 'react'\r\n\r\nexport default class Searchbar extends Component {\r\n    state = {\r\n        query: ''\r\n    }\r\n\r\n    setQuery = (e) => {\r\n        this.setState({\r\n            query: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.props.onSubmit(this.state.query);\r\n        this.setState({ query: '' });\r\n    }\r\n    render() {\r\n\r\n\r\n        return (<header className=\"Searchbar\" onSubmit={this.handleSubmit}>\r\n            <form className=\"SearchForm\">\r\n                <button type=\"submit\" className=\"SearchForm-button\">\r\n                    <span className=\"SearchForm-button-label\">Search</span>\r\n                </button>\r\n\r\n                <input\r\n                    className=\"SearchForm-input\"\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Search images and photos\"\r\n                    value={this.state.query}\r\n                    onChange={this.setQuery}\r\n                />\r\n            </form>\r\n        </header>)\r\n    }\r\n}\r\n\r\n","import PropTypes from 'prop-types'\r\n\r\nexport default function ImageGalleryItem({ src, alt, id, data, onClick, getModalImg }) {\r\n    return <li className=\"ImageGalleryItem\" key={id}>\r\n        <img src={src} alt={alt} data-large={data} className=\"ImageGalleryItem-image\" onClick={(e) => {\r\n            onClick();\r\n            getModalImg(e.target.dataset.large, e.target.alt)\r\n        }} />\r\n    </li>\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    getModalImg: PropTypes.func.isRequired\r\n}","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = e => {\r\n        if (e.code === 'Escape') {\r\n            this.props.onClose();\r\n        }\r\n    };\r\n\r\n    handleBackdropClick = event => {\r\n        if (event.currentTarget === event.target) {\r\n            this.props.onClose();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { src, alt } = this.props\r\n\r\n        return createPortal(\r\n            <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n                <div className=\"Modal\">\r\n                    <img src={src} alt={alt} />\r\n                </div>\r\n            </div>,\r\n            modalRoot,\r\n        );\r\n    }\r\n}\r\n\r\nModal.propTypes = {\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n    onClose: PropTypes.func.isRequired\r\n}","import ImageGalleryItem from './ImageGalleryItem'\r\nimport { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Modal from './Modal'\r\n\r\nexport default class ImageGallery extends Component {\r\n    state = {\r\n        showModal: false,\r\n        src: '',\r\n        alt: ''\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState(({ showModal }) => ({\r\n            showModal: !showModal,\r\n        }));\r\n    };\r\n\r\n    getModalImg = (src, alt) => {\r\n        this.setState({\r\n            src, alt\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { images } = this.props\r\n        return <>\r\n            <ul className=\"ImageGallery\">\r\n                {images.map(({ id, webformatURL, tags, largeImageURL }) => {\r\n                    return <ImageGalleryItem key={`${id + tags}`} id={id} src={webformatURL} alt={tags} data={largeImageURL} onClick={this.toggleModal} getModalImg={this.getModalImg} />\r\n                })}\r\n            </ul>\r\n            {this.state.showModal && <Modal src={this.state.src} alt={this.state.alt} onClose={this.toggleModal} />}\r\n        </>\r\n    }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n    images: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        webformatURL: PropTypes.string.isRequired,\r\n        tags: PropTypes.string.isRequired,\r\n        largeImageURL: PropTypes.string.isRequired,\r\n    }))\r\n}","export default function Button({ onClick }) {\r\n    return <button className='Button' onClick={onClick}>Load more</button>\r\n}","import { Component } from 'react';\r\nimport imageRequest from './Servises/imageAjax';\r\nimport Loader from 'react-loader-spinner';\r\nimport Searchbar from './Components/Searchbar';\r\nimport ImageGallery from './Components/ImageGallery';\r\nimport Button from './Components/Button';\r\n\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport './image.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    images: [],\r\n    searchQuery: '',\r\n    currentPage: 1,\r\n    isLoading: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProp, prevState) {\r\n    if (prevState.searchQuery !== this.state.searchQuery) {\r\n      this.fetchImages();\r\n    }\r\n  }\r\n\r\n  getQuery = q => {\r\n    this.setState({\r\n      searchQuery: q,\r\n      images: [],\r\n      currentPage: 1,\r\n      error: null,\r\n      isLoading: false,\r\n    });\r\n  };\r\n\r\n  fetchImages = () => {\r\n    const { currentPage, searchQuery } = this.state;\r\n    const options = { searchQuery, currentPage };\r\n\r\n    this.setState({ isLoading: true });\r\n\r\n    imageRequest(options)\r\n      .then(images => {\r\n        this.setState(prevState => ({\r\n          images: [...prevState.images, ...images],\r\n          currentPage: prevState.currentPage + 1,\r\n        }));\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: 'smooth',\r\n        });\r\n      })\r\n      .catch(error => this.setState({ error }))\r\n      .finally(() => this.setState({ isLoading: false }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Searchbar onSubmit={this.getQuery} />\r\n        <ImageGallery images={this.state.images} onClick={this.toggleModal} />\r\n        {this.state.isLoading && (\r\n          <div className=\"loader\">\r\n            <Loader\r\n              type=\"Puff\"\r\n              color=\"#00BFFF\"\r\n              height={100}\r\n              width={100}\r\n              timeout={3000} //3 secs\r\n            />\r\n          </div>\r\n        )}\r\n        {this.state.images.length > 0 && !this.state.isLoading && (\r\n          <Button onClick={this.fetchImages} />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}