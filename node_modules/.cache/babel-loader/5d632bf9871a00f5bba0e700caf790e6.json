{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RomanKonopelko\\\\Desktop\\\\go-it\\\\goit-react-hw-03-image-finder\\\\src\\\\App.js\";\nimport { Component } from 'react';\nimport Searchbar from './Components/Searchbar';\nimport imageRequest from './Servises/imageAjax';\nimport ImageGallery from './Components/ImageGallery';\nimport './image.css';\nimport Button from './Components/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      images: [],\n      searchQuery: '',\n      currentPage: 1,\n      showModal: false,\n      isLoading: false\n    };\n\n    this.getQuery = q => {\n      this.setState({\n        searchQuery: q,\n        images: [],\n        currentPage: 1,\n        error: null,\n        isLoading: false\n      });\n      console.log(this.state.searchQuery);\n    };\n\n    this.fetchImages = () => {\n      const {\n        currentPage,\n        searchQuery\n      } = this.state;\n      const options = {\n        searchQuery,\n        currentPage\n      };\n      this.setState({\n        isLoading: true\n      });\n      imageRequest(options).then(images => {\n        this.setState(prevState => ({\n          images: [...prevState.images, ...images],\n          currentPage: prevState.currentPage + 1\n        }));\n      }).catch(error => this.setState({\n        error\n      })).finally(() => this.setState({\n        isLoading: false\n      }));\n    };\n\n    this.toggleModal = () => {\n      this.setState(({\n        showModal\n      }) => ({\n        showModal: !showModal\n      }));\n    };\n  }\n\n  componentDidUpdate(prevProp, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      console.log('update');\n      console.log(this.state.searchQuery);\n      this.fetchImages();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n        onSubmit: this.getQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageGallery, {\n        images: this.state.images,\n        onClick: this.toggleModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), this.state.images.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.fetchImages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/RomanKonopelko/Desktop/go-it/goit-react-hw-03-image-finder/src/App.js"],"names":["Component","Searchbar","imageRequest","ImageGallery","Button","App","state","images","searchQuery","currentPage","showModal","isLoading","getQuery","q","setState","error","console","log","fetchImages","options","then","prevState","catch","finally","toggleModal","componentDidUpdate","prevProp","render","length"],"mappings":"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","sourcesContent":["import { Component } from 'react';\r\nimport Searchbar from './Components/Searchbar';\r\nimport imageRequest from './Servises/imageAjax';\r\nimport ImageGallery from './Components/ImageGallery';\r\nimport './image.css';\r\nimport Button from './Components/Button';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    images: [],\r\n    searchQuery: '',\r\n    currentPage: 1,\r\n    showModal: false,\r\n    isLoading: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProp, prevState) {\r\n    if (prevState.searchQuery !== this.state.searchQuery) {\r\n      console.log('update');\r\n      console.log(this.state.searchQuery);\r\n      this.fetchImages();\r\n    }\r\n  }\r\n\r\n  getQuery = q => {\r\n    this.setState({\r\n      searchQuery: q,\r\n      images: [],\r\n      currentPage: 1,\r\n      error: null,\r\n      isLoading: false,\r\n    });\r\n    console.log(this.state.searchQuery);\r\n  };\r\n\r\n  fetchImages = () => {\r\n    const { currentPage, searchQuery } = this.state;\r\n    const options = { searchQuery, currentPage };\r\n\r\n    this.setState({ isLoading: true });\r\n\r\n    imageRequest(options)\r\n      .then(images => {\r\n        this.setState(prevState => ({\r\n          images: [...prevState.images, ...images],\r\n          currentPage: prevState.currentPage + 1,\r\n        }));\r\n      })\r\n      .catch(error => this.setState({ error }))\r\n      .finally(() => this.setState({ isLoading: false }));\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Searchbar onSubmit={this.getQuery} />\r\n        <ImageGallery images={this.state.images} onClick={this.toggleModal} />\r\n        {this.state.images.length > 0 && <Button onClick={this.fetchImages} />}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}